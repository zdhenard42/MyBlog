[{"content":"","date":null,"permalink":"/","section":"","summary":"","title":""},{"content":"","date":null,"permalink":"/tags/cloudflare/","section":"Tags","summary":"","title":"Cloudflare"},{"content":"","date":null,"permalink":"/tags/cybersecurity/","section":"Tags","summary":"","title":"Cybersecurity"},{"content":"","date":null,"permalink":"/tags/homelab/","section":"Tags","summary":"","title":"Homelab"},{"content":"","date":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"In this post I dive into the simplicity and security of Cloudflare tunneling, which is offered by Cloudflare at no cost. This post will guide you on how to easily and safely expose internal services without exposing your network.\nInitial Setup #To expose your internal services over a Cloudflare tunnel, you will first need to create a Cloudflare account. You can register here.\nYou will then need to own a domain and setup Cloudflare nameservers for DNS on the domain. If you do not already own a domain, I recommend purchasing through Cloudflare due to their very affordable \u0026ldquo;At-Cost\u0026rdquo; model.\nBuilding your first tunnel #After you have successfully tied your domain to your Cloudflare account, we can start creating tunnels!\nIn your Cloudflare dashboard, navigate to \u0026lsquo;Zero Trust\u0026rsquo; -\u0026gt; \u0026lsquo;Access\u0026rsquo; -\u0026gt; \u0026lsquo;Tunnels\u0026rsquo; Once you are at the \u0026lsquo;Tunnels\u0026rsquo; screen, simply click \u0026ldquo;Create a tunnel\u0026rdquo;. The first prompt you will see is the tunnel name. This can be any label you want to use that helps you to identify the network that is being tunneled. Keep in mind that 99% of the time all of your exposed services will be routed through the same tunnel.\nThe next step is running the connector for your tunnel. I highly recommend docker for this due to the ease of management. As long as the service is reachable from the docker container, then it can be routed through a tunnel.\nUpon selecting docker as your environment, you will be given a command to run in the terminal on your host device. Simply enter this command into your host CLI and your tunnel will be built!\nI like to add \u0026lsquo;-d\u0026rsquo; to the command so that the connector is started in detached mode and will run in the background. Exposing Internal Services #The tunnel is built, now we just have to start routing services through it.\nFor this demo, I will route an instance of self-hosted CyberChef which is running on \u0026ldquo;10.0.24.7:3000\u0026rdquo; on my homelab. All we have to do is enter the subdomain we want it to be accessible at, and where is it located on my internal network. Accessing The Service #We are done! Really, that is all there is to it. We can now navigate to Cyberchef.henard.xyz and access our internal instance of Cyberchef! The best part is that Cloudflare will take care of the SSL Cert for us! Adding Additional Services #Now that we have a tunnel, it is super easy to add additional services. Just go back to your Cloudflare tunnel configuration and add another \u0026lsquo;Public Hostname\u0026rsquo;. Now if we go to ITtools.Henard.xyz we can access our self-hosted instance of ITtools! Bonus: Adding Authentication and Access Rules #Cloudflare makes it super easy to add an authentication portal in front of your tunnels.\nIn your Cloudflare dashboard, go to \u0026lsquo;Zero Trust\u0026rsquo; -\u0026gt; \u0026lsquo;Settings\u0026rsquo; -\u0026gt; \u0026lsquo;Authentication\u0026rsquo; -\u0026gt; \u0026lsquo;Login Methods\u0026rsquo;. We can now see all of the authentication methods that Cloudflare supports.. which is a lot.\nJust click your preferred authentication method and follow the steps to add it. I will use One-Time Pin since it requires no initial configuration to implement. After you have added our authentication method, go to \u0026lsquo;Access\u0026rsquo; -\u0026gt; \u0026lsquo;Applications\u0026rsquo;. Click on \u0026ldquo;Add an Application\u0026rdquo; and our application type will be \u0026ldquo;Self-Hosted\u0026rdquo;. Enter the application domain that we are using to host our services, which in my case is \u0026ldquo;cyberchef.henard.xyz\u0026rdquo;.\nTowards the bottom of the page you will see a section called \u0026ldquo;Identity Providers\u0026rdquo;; This is where we will choose what authentication methods we want in front of our tunnel. I only have one enabled, so that is what will be used. After we click next, we are asked to add policies. This is where we can implement many different kinds of rules as to who can or cannot access our service. We can even block entire countries! Once we have all the policies are created we just click \u0026rsquo;next\u0026rsquo; -\u0026gt; \u0026lsquo;Add Application\u0026rsquo;. Now if we try to access cyberchef.henard.xyz, we are redirected to an authentication page that will prompt us for a one-time pin. ","date":"18 January 2024","permalink":"/p/tunneling-internal-services/","section":"Posts","summary":"A guide on setting up and managing Cloudflare tunnels to securely expose internal services using practical examples and security measures.","title":"Tunneling Internal Services through Cloudflare"},{"content":"","date":null,"permalink":"/tags/blue-team/","section":"Tags","summary":"","title":"Blue Team"},{"content":"Introduction #In this guide, I\u0026rsquo;ll show you how to patch Windows 11 to meet Department of Defense security standards, a skill highly valued in the corporate world.\nIdeal for both cybersecurity beginners and experts, mastering this process will not only secure systems but also significantly enhance your resume.\nLet\u0026rsquo;s begin this journey to transform your Windows 11 into a secure system! üöÄ\nInitial Setup: Tools of the Trade #Let\u0026rsquo;s start by downloading the essentials. Don\u0026rsquo;t worry, this is very straightforward.\nInstalling STIG Viewer # Navigate to STIG Viewer\u0026rsquo;s page. Download and run \u0026ldquo;STIG Viewer X.X-Win64 msi\u0026rdquo; Installing SCAP # Visit the SCAP Tools page.\nScroll down to \u0026ldquo;SCAP Tools\u0026rdquo;, select page 3, and grab \u0026ldquo;SCC X.X Windows\u0026rdquo;. Open the downloaded folder and launch \u0026ldquo;Windows_Setup\u0026rdquo;. Just keep hitting next until it is installed.\nWith SCAP open, navigate to options, then \u0026ldquo;Show Options\u0026rdquo; -\u0026gt; \u0026ldquo;Reporting Options\u0026rdquo;. Check \u0026ldquo;Create a single CKL per target system\u0026rdquo; and save. Scan Time: Brew Coffee and Wait #Fire up SCAP, ensure \u0026ldquo;Windows\u0026rdquo; is checked, set to \u0026ldquo;Local Scan\u0026rdquo;, and hit \u0026ldquo;Start Scan\u0026rdquo;. Dismiss any warnings; they\u0026rsquo;re just being dramatic.\nThis will take about 5 minutes\u0026hellip;perfect time for a quick coffee break!‚òï The Reveal: Analyzing Results #The scan\u0026rsquo;s done! Time to play detective with the results.üïµÔ∏è\nHit \u0026lsquo;view results\u0026rsquo;, then \u0026lsquo;Checklist\u0026rsquo;. Right-click on \u0026ldquo;DISA checklist\u0026rdquo; and choose \u0026ldquo;Show in Directory\u0026rdquo;. Note the .CKL file path ‚Äì it\u0026rsquo;s important. Open STIG Viewer and click the \u0026ldquo;Checklists\u0026rdquo; image. Click the three lines on the top left then \u0026ldquo;Import V2 Checklist\u0026rdquo;. Find your SCAP-generated CKL file and select it. Ta-da! We can now see a detailed report of our system. Tip: Collapse sections with the black arrow for a clearer view.\nDecoding the Scan: What are we looking at? #With our scan results now in hand, let\u0026rsquo;s decipher what\u0026rsquo;s in front of us. This tool finds misconfigurations in our system that could be potentially vulnerable.\nPay extra attention to \u0026ldquo;Cat 1\u0026rdquo; findings signify the highest severity. We will primarily focus on these first as they are \u0026ldquo;Critical Vulnerabilities\u0026rdquo;.\nRemediation: Keeping The Bad Guys Out #If we select \u0026ldquo;CAT I\u0026rdquo; at the top, we\u0026rsquo;ll unveil all Category 1 vulnerabilities. Those marked with a red exclamation point are the ones currently open on our system.\nWhen you click on these, you\u0026rsquo;ll typically find three sections: Discussion, Check Text, and Fix Text. Our main focus here is the Fix Text ‚Äì This tells us how to close those security gaps.\nPatching Up: A Hands-On Example # WARNING! Be careful with the fixes, especially in a live environment. Always seek permission before proceeding, and remember, not all open findings need to be closed ‚Äì doing so might hamper functionality. Let\u0026rsquo;s get to work on an actual vulnerability:\n\u0026ldquo;Anonymous enumeration of shares must be restricted.\u0026rdquo;\nThis Category 1 finding was a red flag in my system. The following image shows what this looks like. The \u0026ldquo;Check Text\u0026rdquo; tells us the exact registry key that caused this to be a finding.\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\ So let\u0026rsquo;s go to our registry key and check it out!\nWe see that \u0026ldquo;restrictanonymous\u0026rdquo; is set to zero, so let\u0026rsquo;s switch that to a 1.\nJust like that, we\u0026rsquo;ve neutralized our first vulnerability!\nRescanning: Verifying the Fixes #Once we\u0026rsquo;ve patched up our vulnerabilities, it\u0026rsquo;s vital to ensure that our fixes have applied and have not introduce new issues. Here\u0026rsquo;s how:\nRe-open SCAP and set up as before. Run a new \u0026ldquo;Local Scan.\u0026rdquo; Compare the new results with the previous ones ‚Äì the goal is to see those patched vulnerabilities disappear. This re-scan serves as our quality check, confirming that our defenses are stronger and our efforts were successful.\nExtra Credit: Delve into the \u0026lsquo;Why\u0026rsquo; #Don\u0026rsquo;t stop at just patching up vulnerabilities.\nTake the extra step to research and understand why each issue is a vulnerability in the first place.\nThis deeper knowledge will not only make you more proficient in cybersecurity but will also provide you with critical insights needed to anticipate and counter future threats.\nFurther Exploration: Investigating Unreviewed Vulnerabilities #Additionally, turn your attention to the vulnerabilities marked as \u0026lsquo;Not Reviewed\u0026rsquo;.\nThese potential vulnerabilities were not automatically assessed and require you to manually verify that they are not a finding.\nManually investigating these will provide you with a more comprehensive understanding of your system‚Äôs security landscape.\nConclusion: Your Cybersecurity Journey Continues #You\u0026rsquo;ve now learned how to elevate the security of Windows 11 to meet Department of Defense standards, a valuable skill in today‚Äôs cybersecurity landscape.\nRemember, this journey doesn\u0026rsquo;t just end with fixing vulnerabilities; keep exploring how to stay secure!\n","date":"19 November 2023","permalink":"/p/securing-windows-11-to-dod-standards/","section":"Posts","summary":"Learn how to secure Windows 11 to meet Department of Defense standards with this guide. From identifying vulnerabilities to applying fixes, elevate your cybersecurity skills and understanding.","title":"Securing Windows 11 to DoD Standards"},{"content":"","date":null,"permalink":"/tags/windows-11/","section":"Tags","summary":"","title":"Windows 11"},{"content":"","date":null,"permalink":"/tags/analysis/","section":"Tags","summary":"","title":"Analysis"},{"content":"The final product of this blog can be found here!\nCybersecurity is and will always be a game of cat and mouse.\nOne of the latest tactics used by threat actors is an attack vector called \u0026ldquo;Quishing\u0026rdquo;. \u0026ldquo;Quishing\u0026rdquo; is the act of creating QR codes that contain malicious data such as fake login pages. This attack vector is particularly effective due to its simplicity.\nHoxhunt reports that 22% of phishing attacks used QR codes in October1.\nI realized we\u0026rsquo;re kinda in the wild west with this new threat. Not many shields or swords to fight this dragon. So, I rolled up my sleeves and thought, \u0026ldquo;Why not build something myself?\u0026rdquo;\nQR Codes: The Double-Edged Sword of Digital Convenience and Security Risks #QR codes, or \u0026ldquo;Quick Response Codes\u0026rdquo;, are now a staple in our digital life. They encode data into a 2-D image that smartphones can easily read, storing information like URLs and Wi-Fi credentials.\nWe saw a massive surge in the use of QR codes in 2020 due to\u0026hellip; You guessed it, COVID! The contactless aspect of QR codes allowed many companies to replace items commonly touched with QR codes, such as Food Menus.\nHowever, this convenience also presents security risks.\nConsider this scenario: You are at a hotel with poor cell service, but you urgently need to send documents. A QR code in the elevator allows you to connect to the hotel Wi-Fi, but instead actually connects you to an Evil Twin network set up by an attacker. Now, your sensitive data is exposed without your knowledge.\nDecoding the Mystery: QR Code to URL Conversion #I knew the first step in creating this platform would be decoding the QR code.\nI came across an API created by goqr.me that would allow me to do exactly that. After some testing, I was successfully able to send a QR code and receive back the URL.\nAfter testing with samples of legitimate Quishing files, I realized that attackers had a trick up their sleeve to bypass initial reputation scans of the URL\u0026hellip;\nUnraveling the Web: Tracking URL Redirects #Attackers were using legitimate redirect services to hide the destination URL contained in the payload.\nMany times the redirect service would return a clean report when scanned even though the destination address was malicious. Some Quishing samples redirected up to 6 times before reaching the destination address!\nI found an API developed by Redirect-Checker.net that would follow the redirects and return the destination address as well as the destination IP!\nThis proved to be very useful when performing analysis in later steps.\nPeering into the Digital Abyss: Shodan Insights #One analysis tool that I have come to love is Shodan. Shodan is a search engine that will gather information about most internet-connected devices and systems.\nUsing Shodan\u0026rsquo;s API along with the destination IP I received earlier, I was able to gather the following:\nAutonomous System Number (ASN) Open ports on the destination IP address Country that the IP was located in Operating System running on the destination IP Guardians of the Net: AbuseIPDB Analysis #Another common reputation database that I like to check against is AbuseIPDB. AbuseIPDB also conveniently offers an API.\nLeveraging AbuseIPDB API, I am able to gather the following:\nAbuse Confidence Score ISP that owns the IP address Usage type of the IP address Number of times that IP has been reported If the IP has ever been used as a Tor relay A Shield Against Digital Threats: VirusTotal\u0026rsquo;s Role #Arguably one of the most common online analysis tools is VirusTotal. VirusTotal is an online service that analyzes suspicious files and URLs.\nBy this point you can probably guess\u0026hellip; they have an API!\nI utilized this API to gather:\nThe CIDR block the IP address belonged to An analysis of the IP address A WhoIs containing the domain registrar information The URL Sentinel: URLHaus API Integration #The last tool that I leveraged when analyzing these QR codes was URLHaus.\nPrior to this project I was not very familiar with URLHaus. After seeing how large of a database URLHaus offered, I knew this would be very useful for analysis. URLHaus API provides data that is not available from other services I am using.\nHere is what I am gathering from URLHaus:\nThe status of the URL (Offline or Online) The payload that the address is delivering A link to the URLHaus analysis of the queried URL Tags associated with the queried URL User Experience: Aggregating the data #After all the queries have been made, I needed a way to cleanly present this back to the user.\nI never have been proficient in front-end design so my design process went something like this:\nStep 1: Format how the API response is displayed to the user\nStep 2: Ask peers and friends what they thought of the design\nStep 3: GOTO Step 1\nAfter many iterations of redesigning the front-end experience, I finally settled on a design.\nHere is the output of Quishing sample scan:\nConclusion #Gaining the ability to create my own API has introduced a completely new method to approaching projects in the future. The customization that comes with having complete control over the data returned is invaluable.\nNow, users can scan QR codes on my platform with confidence, knowing they\u0026rsquo;ll be alerted to any potential security risks.\nThis project was a significant step in my journey as a developer and a valuable contribution to cybersecurity awareness. It\u0026rsquo;s a testament to how innovative solutions can emerge from challenges, especially in the ever-evolving landscape of digital security.\nRecreate this yourself! #The source code of my API is available on Github. I would recommend utilizing Cloudflare Workers when first creating an API due to the generous usage limits that come with the free plan.\nFeel free to create a pull request with any improvements you see fit!\nHoxHunt Stats\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"16 November 2023","permalink":"/p/building-a-qr-code-security-analysis-tool/","section":"Posts","summary":"Exploring the creation of an API to counter \u0026ldquo;Quishing,\u0026rdquo; this post highlights the use of advanced tools for analyzing and mitigating threats from malicious QR codes.","title":"Building a QR Code Security Analysis Tool"},{"content":"","date":null,"permalink":"/tags/javascript/","section":"Tags","summary":"","title":"JavaScript"},{"content":"","date":null,"permalink":"/tags/open-source/","section":"Tags","summary":"","title":"Open Source"},{"content":"","date":"1 January 0001","permalink":"/cv/","section":"","summary":"","title":""},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"}]